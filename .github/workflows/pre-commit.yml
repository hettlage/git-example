name: Pre-Commit

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashfiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.ps }}-pip-
    - name: Tag version release
      run: |
        git tag $(cat version.txt)
    - name: Install dependencieas
      run: /bin/bash -x run.sh install
    - name: Lint the code
      run: /bin/bash -x run.sh lint:ci
    - name: Build package
      run: /bin/bash -x run.sh build
#    - name: Tag release version
#      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#      run: |
#        git push origin --tags
#      env:
#        TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
#    - name: Publish to Test PyPI
#      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#      run: |
#        echo ${{ github.event_name }} ${{ github.ref }}
#        /bin/bash -x run.sh publish:test
#      env:
#        TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
#    - name: Publish to Prod PyPI
#      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#      run: /bin/bash -x run.sh publish:test
#      env:
#        TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
