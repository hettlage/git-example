name: Pre-Commit

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashfiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.ps }}-pip-
      - name: Install pre-commit
        run:
           pip install pre-commit

  check-version-txt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Tag with the release version
        run: |
          git tag $(cat version.txt)

  build-wheel-and-sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashfiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.ps }}-pip-
    - name: Install dependencies
      run: pip install build
    - name: Build package
      run: /bin/bash -x run.sh build
    - name: Upload dist folder
      uses: actions/upload-artifact@v4
      with:
        name: wheel-and-sdist
        path: ./dist/*

  publish:
    runs-on: ubuntu-latest
    needs:
      - lint
      - check-version-txt
      - build-wheel-and-sdist
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: download wheel and sdist
        uses: actions/download-artifact@v4
        with:
          name: wheel-and-sdist
          path: ./dist
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashfiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.ps }}-pip-
      - name: Install twine
        run:
           pip install twine
      - name: Publish to Test PyPI
        run: |
          echo ${{ github.event_name }} ${{ github.ref }}
          /bin/bash -x run.sh publish:test
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
#      - name: Publish to Prod PyPI
#        run: /bin/bash -x run.sh publish:test
#        env:
#          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
